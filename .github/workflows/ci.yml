name: CI
on: [ push ]

jobs:
  code-quality:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - name: Cache $HOME/.local # Significantly speeds up Poetry Install
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}-${{ hashFiles('.github/workflows/ci.yml') }}
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install --no-interaction
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit-4|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Pre-commit run
        run: poetry run pre-commit run --show-diff-on-failure --color=always --all-files

  code-test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.9', '3.10', '3.11' ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache $HOME/.local # Significantly speeds up Poetry Install
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}-${{ hashFiles('.github/workflows/ci.yml') }}
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Run tests
        run: poetry run pytest .

  release:
    needs:
      - code-test
      - code-quality
    runs-on: "ubuntu-latest"
    concurrency: release
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache $HOME/.local # Significantly speeds up Poetry Install
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}-${{ hashFiles('.github/workflows/ci.yml') }}
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Create python semantic release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
#          repository_username: tim
#          repository_password: ${{ secrets.PYPI_TOKEN }}
